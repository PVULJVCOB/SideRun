{
  "version": 3,
  "sources": ["../../js/scroll-effects.js"],
  "sourcesContent": ["/**\n * Scroll + Parallax Effects \n * - IntersectionObserver toggles entrance animations on [data-scroll]\n * - rAF parallax updates for [data-scroll*=\"parallax\"] elements\n * - Reduced-motion support disables all motion\n */\n(function () {\n  const prefersReducedMotion =\n    window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n\n  function initObserver() {\n    if (prefersReducedMotion) return;\n    // Trigger slightly before elements hit the center; allow re-hide when leaving viewport\n  const options = { threshold: [0, 0.1], rootMargin: '0px 0px -100px 0px' };\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        const el = entry.target;\n        const type = el.getAttribute('data-scroll');\n        if (entry.isIntersecting) {\n          el.classList.add('visible');\n          el.classList.remove('scroll-init');\n          if (type) el.classList.add(`scroll-${type}`);\n          // Stagger support for children: adds incremental transition-delay\n          const staggerChildren = el.querySelectorAll('[data-stagger-child]');\n          if (staggerChildren.length) {\n            const base = parseFloat(el.getAttribute('data-stagger-base') || '80'); // ms\n            staggerChildren.forEach((child, i) => {\n              child.style.transitionDelay = `${i * base}ms`;\n            });\n          }\n          if (el.hasAttribute('data-scroll-once')) observer.unobserve(el);\n        } else if (!el.hasAttribute('data-scroll-once')) {\n          el.classList.remove('visible');\n          el.classList.add('scroll-init');\n          if (type) el.classList.remove(`scroll-${type}`);\n          if (type && type.indexOf('parallax') !== -1) {\n            el.style.transform = '';\n          }\n          // Reset child delays when leaving view\n          el.querySelectorAll('[data-stagger-child]').forEach((child) => {\n            child.style.transitionDelay = '';\n          });\n        }\n      });\n    }, options);\n\n    const els = document.querySelectorAll('[data-scroll]');\n    els.forEach((el) => {\n      // Skip scroll effects for elements visually inside the hero bleed wrappers\n      // We detect the closest hero and ensure the target is not a pseudo element host\n      const inHero = el.closest && el.closest('#hero');\n      if (inHero && el.matches('.hero, .hero *')) {\n        // Allow scroll animations on content, but avoid triggering\n        // on the hero container itself or bleed overlays (none have data-scroll)\n      }\n      // If element is a SideRun host or contains one, avoid opacity transitions (transform-only)\n      const hasSRHost = el.classList.contains('sr-container') || !!el.querySelector('.sr-container');\n      if (hasSRHost) {\n        el.classList.add('scroll-transform-only');\n      }\n      observer.observe(el);\n      el.classList.add('scroll-init');\n    });\n\n    // Initial reveal pass: if element is already in the viewport, mark as visible now.\n    // This guards against cases near the bottom/top where rootMargin prevents initial intersect.\n    function isInViewport(el) {\n      const rect = el.getBoundingClientRect();\n      return rect.bottom > 0 && rect.top < window.innerHeight;\n    }\n    els.forEach((el) => {\n      if (isInViewport(el)) {\n        const type = el.getAttribute('data-scroll');\n        el.classList.add('visible');\n        el.classList.remove('scroll-init');\n        if (type) el.classList.add(`scroll-${type}`);\n      }\n    });\n  }\n\n  function computeRate(type, distanceFromCenter) {\n    const base = distanceFromCenter / window.innerHeight;\n    switch (type) {\n      case 'parallax-slow':\n        return base * -30;\n      case 'parallax-medium':\n        return base * -50;\n      case 'parallax-fast':\n        return base * -90;\n      default:\n        return base * -40;\n    }\n  }\n\n  function initParallax() {\n    if (prefersReducedMotion) return;\n    let ticking = false;\n\n    function updateParallax() {\n      const els = document.querySelectorAll('[data-scroll*=\"parallax\"]');\n      els.forEach((el) => {\n        const rect = el.getBoundingClientRect();\n        // Avoid reacting inside the non-scrollable hero bleed illusion near the very top/bottom.\n        // If the element is above the viewport top beyond an extended threshold or far below, skip.\n        if (rect.bottom <= 0 || rect.top >= window.innerHeight) return;\n        const elCenter = rect.top + rect.height / 2;\n        const viewportCenter = window.innerHeight / 2;\n        const distance = elCenter - viewportCenter;\n        const type = el.getAttribute('data-scroll');\n\n        // Skip if far off-screen to save work\n        if (rect.bottom < -240 || rect.top > window.innerHeight + 240) return;\n\n        const rate = computeRate(type, distance);\n        el.style.transform = `translate3d(0, ${rate}px, 0)`;\n      });\n      ticking = false;\n    }\n\n    function onScroll() {\n      if (!ticking) {\n        ticking = true;\n        requestAnimationFrame(updateParallax);\n      }\n    }\n\n    window.addEventListener('scroll', onScroll, { passive: true });\n  window.addEventListener('resize', updateParallax, { passive: true });\n\n    // initial\n    if (document.readyState === 'complete' || document.readyState === 'interactive') {\n      updateParallax();\n    } else {\n      document.addEventListener('DOMContentLoaded', updateParallax, { once: true });\n    }\n  }\n\n  // Bootstrap on DOM ready\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    initObserver();\n    initParallax();\n  } else {\n    document.addEventListener('DOMContentLoaded', () => {\n      initObserver();\n      initParallax();\n    });\n  }\n})();\n"],
  "mappings": "OAMC,UAAY,CACX,IAAMA,EACJ,OAAO,YAAc,OAAO,WAAW,kCAAkC,EAAE,QAE7E,SAASC,GAAe,CACtB,GAAID,EAAsB,OAE5B,IAAME,EAAU,CAAE,UAAW,CAAC,EAAG,EAAG,EAAG,WAAY,oBAAqB,EAChEC,EAAW,IAAI,qBAAsBC,GAAY,CACrDA,EAAQ,QAASC,GAAU,CACzB,IAAMC,EAAKD,EAAM,OACXE,EAAOD,EAAG,aAAa,aAAa,EAC1C,GAAID,EAAM,eAAgB,CACxBC,EAAG,UAAU,IAAI,SAAS,EAC1BA,EAAG,UAAU,OAAO,aAAa,EAC7BC,GAAMD,EAAG,UAAU,IAAI,UAAUC,CAAI,EAAE,EAE3C,IAAMC,EAAkBF,EAAG,iBAAiB,sBAAsB,EAClE,GAAIE,EAAgB,OAAQ,CAC1B,IAAMC,EAAO,WAAWH,EAAG,aAAa,mBAAmB,GAAK,IAAI,EACpEE,EAAgB,QAAQ,CAACE,EAAOC,IAAM,CACpCD,EAAM,MAAM,gBAAkB,GAAGC,EAAIF,CAAI,IAC3C,CAAC,CACH,CACIH,EAAG,aAAa,kBAAkB,GAAGH,EAAS,UAAUG,CAAE,CAChE,MAAYA,EAAG,aAAa,kBAAkB,IAC5CA,EAAG,UAAU,OAAO,SAAS,EAC7BA,EAAG,UAAU,IAAI,aAAa,EAC1BC,GAAMD,EAAG,UAAU,OAAO,UAAUC,CAAI,EAAE,EAC1CA,GAAQA,EAAK,QAAQ,UAAU,IAAM,KACvCD,EAAG,MAAM,UAAY,IAGvBA,EAAG,iBAAiB,sBAAsB,EAAE,QAASI,GAAU,CAC7DA,EAAM,MAAM,gBAAkB,EAChC,CAAC,EAEL,CAAC,CACH,EAAGR,CAAO,EAEJU,EAAM,SAAS,iBAAiB,eAAe,EACrDA,EAAI,QAASN,GAAO,CAGHA,EAAG,SAAWA,EAAG,QAAQ,OAAO,GACjCA,EAAG,QAAQ,gBAAgB,GAKvBA,EAAG,UAAU,SAAS,cAAc,GAAK,CAAC,CAACA,EAAG,cAAc,eAAe,IAE3FA,EAAG,UAAU,IAAI,uBAAuB,EAE1CH,EAAS,QAAQG,CAAE,EACnBA,EAAG,UAAU,IAAI,aAAa,CAChC,CAAC,EAID,SAASO,EAAaP,EAAI,CACxB,IAAMQ,EAAOR,EAAG,sBAAsB,EACtC,OAAOQ,EAAK,OAAS,GAAKA,EAAK,IAAM,OAAO,WAC9C,CACAF,EAAI,QAASN,GAAO,CAClB,GAAIO,EAAaP,CAAE,EAAG,CACpB,IAAMC,EAAOD,EAAG,aAAa,aAAa,EAC1CA,EAAG,UAAU,IAAI,SAAS,EAC1BA,EAAG,UAAU,OAAO,aAAa,EAC7BC,GAAMD,EAAG,UAAU,IAAI,UAAUC,CAAI,EAAE,CAC7C,CACF,CAAC,CACH,CAEA,SAASQ,EAAYR,EAAMS,EAAoB,CAC7C,IAAMP,EAAOO,EAAqB,OAAO,YACzC,OAAQT,EAAM,CACZ,IAAK,gBACH,OAAOE,EAAO,IAChB,IAAK,kBACH,OAAOA,EAAO,IAChB,IAAK,gBACH,OAAOA,EAAO,IAChB,QACE,OAAOA,EAAO,GAClB,CACF,CAEA,SAASQ,GAAe,CACtB,GAAIjB,EAAsB,OAC1B,IAAIkB,EAAU,GAEd,SAASC,GAAiB,CACZ,SAAS,iBAAiB,2BAA2B,EAC7D,QAASb,GAAO,CAClB,IAAMQ,EAAOR,EAAG,sBAAsB,EAGtC,GAAIQ,EAAK,QAAU,GAAKA,EAAK,KAAO,OAAO,YAAa,OACxD,IAAMM,EAAWN,EAAK,IAAMA,EAAK,OAAS,EACpCO,EAAiB,OAAO,YAAc,EACtCC,EAAWF,EAAWC,EACtBd,EAAOD,EAAG,aAAa,aAAa,EAG1C,GAAIQ,EAAK,OAAS,MAAQA,EAAK,IAAM,OAAO,YAAc,IAAK,OAE/D,IAAMS,EAAOR,EAAYR,EAAMe,CAAQ,EACvChB,EAAG,MAAM,UAAY,kBAAkBiB,CAAI,QAC7C,CAAC,EACDL,EAAU,EACZ,CAEA,SAASM,GAAW,CACbN,IACHA,EAAU,GACV,sBAAsBC,CAAc,EAExC,CAEA,OAAO,iBAAiB,SAAUK,EAAU,CAAE,QAAS,EAAK,CAAC,EAC/D,OAAO,iBAAiB,SAAUL,EAAgB,CAAE,QAAS,EAAK,CAAC,EAG7D,SAAS,aAAe,YAAc,SAAS,aAAe,cAChEA,EAAe,EAEf,SAAS,iBAAiB,mBAAoBA,EAAgB,CAAE,KAAM,EAAK,CAAC,CAEhF,CAGI,SAAS,aAAe,YAAc,SAAS,aAAe,eAChElB,EAAa,EACbgB,EAAa,GAEb,SAAS,iBAAiB,mBAAoB,IAAM,CAClDhB,EAAa,EACbgB,EAAa,CACf,CAAC,CAEL,GAAG",
  "names": ["prefersReducedMotion", "initObserver", "options", "observer", "entries", "entry", "el", "type", "staggerChildren", "base", "child", "i", "els", "isInViewport", "rect", "computeRate", "distanceFromCenter", "initParallax", "ticking", "updateParallax", "elCenter", "viewportCenter", "distance", "rate", "onScroll"]
}
