/* Consolidated responsive rules extracted from component CSS files */
/* Mobile-first breakpoints: min-width queries for larger devices */

/* Global container constraints using clamp for fluidity */
:root {
	--container-max: clamp(640px, 86vw, 1200px);

@media (max-width: 768px) {
html, body {
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100dvh; /* Dynamische Höhe für den gesamten Bildschirm */
}
hero {
  width: 100vw;
  padding-top: 50px;
  height: 100dvh;
  position: relative; /* oder absolute, falls nötig */
}


/* === grid and container scaling (main.css) === */
@media (min-width: 880px) {
	.sr-grid.two {
		grid-template-columns: repeat(2, minmax(0, 1fr));
		gap: 28px;
	}
	.sr-grid.three {
		grid-template-columns: repeat(3, minmax(0, 1fr));
		gap: 24px;
	}
}

/* Hide the mobile navbar for viewports smaller than 880px */
@media (max-width: 879px) {
    .site-nav.siderun {
        display: none !important;
    }
}

@media (max-width: 880px) { .sr-container { --sr-scale: 0.9; } }
@media (max-width: 600px) { .sr-container { --sr-scale: 0.8; } }
@media (max-width: 420px) { .sr-container { --sr-scale: 0.7; } }

}

/* Mobile safety: prevent any horizontal/out-of-bounds scrolling on small viewports.
   These rules apply for typical phone widths and enforce that the viewport
   cannot be scrolled left/right. They also improve touch behavior. */
@media (max-width: 879px) {
	/* Ensure body can't be scrolled horizontally */
	html, body {
		overflow-x: hidden !important;
		max-width: 100vw !important;
		touch-action: pan-y !important; /* only allow vertical panning */
		overscroll-behavior-x: contain !important; /* avoid side swipe gestures */
	}

	/* If any element is accidentally wider than the viewport, clip it visually */
	body > * {
		min-width: 0 !important;
		box-sizing: border-box;
	}

	/* Keep the navbar hidden on phones (reinforce component-level rule) */
	.site-nav.siderun { display: none !important; }
}