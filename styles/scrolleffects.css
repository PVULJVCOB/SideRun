/*
  Scroll and Parallax Effects (inspired by NoArt.)
  - IntersectionObserver-driven entrance animations
  - rAF-driven parallax translateY for elements annotated with data-scroll="parallax-*"
  - Reduced-motion support disables animations and parallax
*/

:root {
  /* Timing tokens for scroll effects */
  --scroll-ease: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --scroll-ease-ui: cubic-bezier(0.4, 0, 0.2, 1);
  --scroll-duration: 0.9s;
}

/* Use a smooth timing curve similar to the reference, but scope to animated elements only */
.scroll-init,
.visible,
[data-scroll] {
  transition-timing-function: var(--scroll-ease-ui);
}

/* Initial hidden state applied via JS */
.scroll-init {
  opacity: 0;
  transform: translateY(40px);
  transition:
    opacity var(--scroll-duration) var(--scroll-ease),
    transform var(--scroll-duration) var(--scroll-ease);
}

/* Always have transition present on scroll-annotated elements */
[data-scroll] {
  transition:
    opacity var(--scroll-duration) var(--scroll-ease),
    transform var(--scroll-duration) var(--scroll-ease);
}

/* Visible state toggled by IntersectionObserver */
.visible {
  opacity: 1;
  transform: none;
}

/* Optional: when staggering, children will receive inline transition-delays from JS */
[data-stagger-child] {
  /* ensure the same baseline transition applies */
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Directional variants: adjust initial transform */
.scroll-init[data-scroll='fade-left'] {
  transform: translateX(-60px);
  transition:
    opacity var(--scroll-duration) var(--scroll-ease),
    transform var(--scroll-duration) var(--scroll-ease);
}
.scroll-init[data-scroll='fade-right'] {
  transform: translateX(60px);
  transition:
    opacity var(--scroll-duration) var(--scroll-ease),
    transform var(--scroll-duration) var(--scroll-ease);
}
.scroll-init[data-scroll='fade-up'] {
  transform: translateY(40px);
  transition:
    opacity var(--scroll-duration) var(--scroll-ease),
    transform var(--scroll-duration) var(--scroll-ease);
}

/* Parallax base: allow 3D transforms */
[data-scroll*='parallax'] {
  transform-style: preserve-3d;
  backface-visibility: hidden;
  will-change: transform;
}

/* Sibling delay patterns (inspired by original) */
[data-scroll='fade-up'] + .section-subtitle,
.section-title[data-scroll='fade-up'] + [data-scroll='fade-up'] {
  transition-delay: 0.12s;
}

.location-info .info-block[data-scroll='fade-up'] { transition-delay: 0s; }
.location-info .info-block[data-scroll='fade-up']:nth-of-type(2) { transition-delay: 0.12s; }
.location-info .info-block[data-scroll='fade-up']:nth-of-type(3) { transition-delay: 0.24s; }

/* reduced-motion rules moved to styles/responsive.css */

/* SideRun host flicker fix (clean variant):
   Elements flagged by JS with .scroll-transform-only skip opacity transitions. */
.scroll-transform-only.scroll-init,
.scroll-transform-only.visible {
  opacity: 1;
}

.scroll-transform-only {
  transition: transform var(--scroll-duration) var(--scroll-ease);
}

/* Guard: Do not animate hero container itself (only its inner content uses data-scroll) */
#hero[data-scroll],
#hero .hero-parallax[data-scroll] {
  transition: none !important;
}

/* Mobile-only overrides: reduce motion and prefer horizontal fades for demo containers */
@media (max-width: 879px) {
  :root {
    --scroll-duration: 0.55s; /* faster on mobile */
  }

  /* Reduce initial translate distances for a subtler effect */
  .scroll-init { transform: translateY(18px); }

  .scroll-init[data-scroll='fade-left'] { transform: translateX(-28px); }
  .scroll-init[data-scroll='fade-right'] { transform: translateX(28px); }
  .scroll-init[data-scroll='fade-up'] { transform: translateY(18px); }

  /* For demo containers (.glass-card) we want horizontal motion instead of vertical.
     If developers used data-scroll="fade-up" on .glass-card children, silently prefer
     left/right variants to create a left/right entrance flow on mobile. */
  .glass-card [data-scroll='fade-up'] { /* transform into fade-left by default on phones */
    transform: translateX(-28px) !important;
    transition:
      opacity var(--scroll-duration) var(--scroll-ease),
      transform var(--scroll-duration) var(--scroll-ease) !important;
  }
  /* For alternating cards we can nudge the opposite direction when marked */
  .glass-card:nth-child(even) [data-scroll='fade-up'] {
    transform: translateX(28px) !important;
  }

  /* Slightly tighter timing on stagger children for mobile */
  [data-stagger-child] { transition-delay: 0s; }
}
